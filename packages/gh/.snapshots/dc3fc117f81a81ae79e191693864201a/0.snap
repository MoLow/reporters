Object {
  "exitCode": 1,
  "stderr": "",
  "stdout": "this is a console log
::debug::starting to run tests
::debug::starting to run is ok
▶ tests
::group::  ✔ is ok (* millisecond)
::debug::completed running is ok
::debug::starting to run fails
::endgroup::
::group::  ✖ fails (* millisecond)
::error title=fails,file=packages/gh/tests/example.js,line=9,col=11::Error: this is an error%0A    at TestContext.<anonymous> (CWD/tests/example.js:9:11)%0A    at Test.runInAsyncScope (node:async_hooks:206:9)%0A    at Test.run (node:internal/test_runner/test:796:25)%0A    at Suite.processPendingSubtests (node:internal/test_runner/test:526:18)%0A    at Test.postRun (node:internal/test_runner/test:889:19)%0A    at Test.run (node:internal/test_runner/test:835:12)%0A    at async Promise.all (index 0)%0A    at async Suite.run (node:internal/test_runner/test:1135:7)%0A    at async Test.processPendingSubtests (node:internal/test_runner/test:526:7)
::debug::starting to run is a diagnostic
::endgroup::
::group::  ✔ is a diagnostic (* millisecond)
::debug::completed running is a diagnostic
  this is a diagnostic
::debug::starting to run should fail
::endgroup::
::group::  ✖ should fail (* millisecond)
::error title=should fail,file=packages/gh/tests/example.js,line=12,col=31::AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:%0A%0A  assert(false)%0A%0A    at TestContext.<anonymous> (CWD/tests/example.js:12:31)%0A    at Test.runInAsyncScope (node:async_hooks:206:9)%0A    at Test.run (node:internal/test_runner/test:796:25)%0A    at Suite.processPendingSubtests (node:internal/test_runner/test:526:18)%0A    at Test.postRun (node:internal/test_runner/test:889:19)%0A    at Test.run (node:internal/test_runner/test:835:12)%0A    at async Suite.processPendingSubtests (node:internal/test_runner/test:526:7) {%0A  generatedMessage: true,%0A  code: 'ERR_ASSERTION',%0A  actual: false,%0A  expected: true,%0A  operator: '=='%0A}
::endgroup::
::group::✖ tests (* millisecond)
::debug::starting to run more tests
::debug::starting to run is ok
::endgroup::
▶ more tests
::group::  ✔ is ok (* millisecond)
::debug::completed running is ok
::endgroup::
::group::✔ more tests (* millisecond)
::debug::completed running more tests
::debug::starting to run is skipped
::endgroup::
::group::﹣ is skipped (* millisecond) # SKIP
::debug::completed running is skipped
::debug::starting to run is a todo
::endgroup::
::group::✔ is a todo (* millisecond) # TODO
::debug::completed running is a todo
::debug::starting to run top level diagnostic
::endgroup::
::group::✔ top level diagnostic (* millisecond)
::debug::completed running top level diagnostic
top level diagnostic
::endgroup::


✖ failing tests:

*
::group::✖ fails (* millisecond)
  Error: this is an error
      *
      *
      *
      *
      *
      *
      at async Promise.all (index 0)
      *
      *

*
::endgroup::
::group::✖ should fail (* millisecond)
  AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert(false)
  
      *
      *
      *
      *
      *
      *
      * {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  }

::endgroup::
::group::Test results (4 passed, 2 failed)
::notice::Total Tests: 8%0ASuites 📂: 2%0APassed ✅: 4%0AFailed ❌: 2%0ACanceled 🚫: 0%0ASkipped ⏭️: 1%0ATodo 📝: 1%0ADuration 🕐: * millisecond
::endgroup::
",
}